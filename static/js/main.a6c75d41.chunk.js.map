{"version":3,"sources":["hock-context/themeContext.js","units/icons.js","units/temperatureConvert.js","units/timeConverter.js","libs/fetcher.js","libs/clientMessages/clientMessages.js","units/fetchDataWeather.js","units/fetchDataLocation.js","components/geo.component.jsx","components/temperature.component.jsx","components/detail.component.jsx","components/diagram.component.jsx","components/search.component.jsx","components/theme-switcher.component.jsx","hock-context/useComponentVisible.js","app.container.jsx","index.js"],"names":["STORAGE_NAME_THEME_COLOR","process","getInitialTheme","window","localStorage","storedPrefs","getItem","setItem","ThemeContext","React","createContext","ThemeProvider","initialTheme","children","useState","theme","setTheme","useEffect","rawSetTheme","rawTheme","document","body","setAttribute","Provider","value","Icons","iconId","icon","icons","kelvinToC","kelvin","Math","round","dateFromTimestamp","timestamp","date","Date","moment","format","timeFromTimestamp","fetcher","url","a","fetch","response","ok","handleError","status","json","getJson","errorCode","error","Error","messageError","text","delay","createToast","timeout","type","API_KEY","BASE_URL","fetchDataWeather","latitude","longitude","cityName","geoCoordinates","encodeURIComponent","currentWeatherUrl","weatherForecastUrl","currentWeatherData","getDataJson","actualTemperature","main","temp","toFixed","dt","name","windSpeed","wind","speed","humidity","pressure","weatherDescription","weather","description","toUpperCase","weatherIcon","id","weatherForecastData","temperaturesForecast","temperaturesForecastLabels","i","Number","list","cloneTemperaturesForecast","sort","pop","shift","maxTemperature","minTemperature","Promise","all","then","responses","weatherData","loaded","forEach","Object","assign","fetchDataLocation","locationInfo","getGeolocation","loc","splitLocationData","split","Geo","props","className","Temperature","data","formatValue","parseInt","Detail","parseFloat","Diagram","colorBg","setColorBg","colorText","setColorText","colorPrimary","setColorPrimary","useContext","findTheme","themeColorList","filter","themeColor","bg","primary","err","getLinkOnBody","getCssVarContainer","getComputedStyle","getPropertyValue","diagramOptions","series","options","chart","height","colors","plotOptions","bar","dataLabels","position","enabled","formatter","val","offsetY","style","fontSize","xaxis","categories","axisBorder","show","axisTicks","tooltip","labels","yaxis","align","Search","onLocationChange","isCancelled","useRef","users","setUsers","setText","suggestions","setSuggestions","focusSuggestion","setFocusSuggestion","loadUsers","URL","res","suggestionsCollection","suggestionsFilter","_cityFilter","current","length","_clearFocusSuggestion","_clearSuggestion","suggestionArr","suggestObj","includes","matchLevel","_cityNameLayout","suggestion","countyName","address","county","district","city","handleClearField","setTimeout","role","placeholder","onChange","event","target","onBlur","onKeyDown","key","code","maxSuggest","onClick","width","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","map","index","handleSuggestClick","locationId","ThemeSwitcher","initialIsVisible","isComponentVisible","setIsComponentVisible","ref","handleClickOutside","contains","addEventListener","removeEventListener","useComponentVisible","toggleThemeList","handleChangeTheme","themeObj","boxShadow","secondary","border","background","AppContainer","handleLocationChange","inputText","setState","state","this","getData","getLocation","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a6c75d41.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\n\nconst STORAGE_NAME_THEME_COLOR = process.env.REACT_APP_STORAGE_NAME_THEME_COLOR || \"color\";\n\nconst getInitialTheme = () => {\n  if (typeof window !== 'undefined' && window.localStorage) {\n    const storedPrefs = window.localStorage.getItem(STORAGE_NAME_THEME_COLOR);\n    \n    if (!storedPrefs) {\n      window.localStorage.setItem(STORAGE_NAME_THEME_COLOR, 'default');\n      return 'default';\n    }\n    \n    return storedPrefs;\n  }\n  \n  return 'default';\n};\n\n\nexport const ThemeContext = React.createContext();\n\n\nexport const ThemeProvider = ({ initialTheme, children }) => {\n  const [ theme, setTheme ] = useState(getInitialTheme);\n  \n  useEffect(() => {\n    rawSetTheme(theme);\n  }, [ theme ]);\n  \n  const rawSetTheme = (rawTheme) => {\n    const getThemeSwitcher = document.body;\n    // data-theme custom attribute for switching skins. Is in index.html <body data-theme=\"default\">\n    getThemeSwitcher.setAttribute(\"data-theme\", rawTheme);\n    \n    localStorage.setItem(STORAGE_NAME_THEME_COLOR, rawTheme);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      { children }\n    </ThemeContext.Provider>\n  );\n};\n","import icons from './iconsList.json';\n\nexport default function Icons (iconId) {\n  const prefix = 'wi wi-';\n  let icon = icons[ iconId ].icon;\n  \n  // If we are not in the ranges mentioned above, add a day/night prefix.\n  if (!(iconId > 699 && iconId < 800) && !(iconId > 899 && iconId < 1000)) {\n    icon = 'day-' + icon;\n  }\n  \n  return prefix + icon;\n}\n","// Convert degree Kelvin to degree Celsius\nconst kelvinToC = (kelvin) => Math.round(kelvin - 273);\n\n\nexport {\n  kelvinToC\n}\n","import moment from \"moment\";\n\n\n// Get date from Unix timestamp\nconst dateFromTimestamp = (timestamp) => {\n\tconst date = new Date(timestamp * 1000);\n\treturn moment(date).format(\"ddd, MMMM DD\");\n};\n\n// Get time from Unix timestamp\nconst timeFromTimestamp = (timestamp) => {\n\tconst date = new Date(timestamp * 1000);\n\treturn moment(date).format(\"HH:MM\");\n};\n\n\nexport {\n\tdateFromTimestamp,\n\ttimeFromTimestamp\n}","export default async function fetcher(url) {\n  const response = await fetch(url)\n  \n  if (!response.ok) {\n    const error = handleError(response.status);\n    throw error;\n  }\n  \n  const getJson = await response.json();\n\n  return getJson;\n}\n\nfunction handleError(errorCode) {\n  let error;\n  \n  switch (errorCode) {\n    case 401:\n      error = \"It looks like the API did not authorize your request. Please ensure you have a valid API key.\";\n      break;\n      \n    case 404:\n      error = \"No results found. Check your query again or try searching for a different location.\";\n      break;\n      \n    case 429:\n      error = \"It looks like you've made too many requests to the server. Please wait a while before trying again.\";\n      break;\n      \n    default:\n      error = \"Sorry. Something went wrong, we'll fix it soon\";\n      break;\n  }\n  \n  return new Error(error);\n}\n","import { createToast } from \"vercel-toast\";\nimport \"./clientMessages.css\";\n\n\nconst messageError = (text, delay = 5000) => createToast(text, {\n\ttimeout: delay,\n\ttype: 'error'\n});\n\n\nexport {\n\tmessageError\n}\n\n","import Icons from \"./icons\";\nimport { kelvinToC } from \"./temperatureConvert\";\nimport { dateFromTimestamp, timeFromTimestamp } from \"./timeConverter\";\nimport fetcher from \"../libs/fetcher\";\nimport { messageError } from \"../libs/clientMessages/clientMessages\";\n\n\nconst API_KEY = process.env.REACT_APP_OPENWEATHERMAP_API_KEY || \"\";\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5/\";\n\n\n// const fetchDataWeather = ({ latitude, longitude }) => {\nconst fetchDataWeather = ({ latitude, longitude, cityName }) => {\n\tlet geoCoordinates = `&lat=${ latitude }&lon=${ longitude }`;\n\t\n\tif (cityName) {\n\t\tgeoCoordinates = `&q=${ encodeURIComponent(cityName) }`;\n\t}\n\t\n\tconst currentWeatherUrl = `${ BASE_URL }weather?appid=${ API_KEY }${ geoCoordinates }`;\n\tconst weatherForecastUrl = `${ BASE_URL }forecast?appid=${ API_KEY }${ geoCoordinates }`;\n\t\n\tconst currentWeatherData = async () => {\n\t\ttry {\n\t\t\tconst getDataJson = await fetcher(currentWeatherUrl);\n\t\t\t\n\t\t\treturn  {\n\t\t\t\tactualTemperature: kelvinToC(getDataJson.main.temp).toFixed(0),\n\t\t\t\tdate: dateFromTimestamp(getDataJson.dt),\n\t\t\t\tcityName: getDataJson.name,\n\t\t\t\twindSpeed: getDataJson.wind.speed,\n\t\t\t\thumidity: getDataJson.main.humidity.toFixed(0),\n\t\t\t\tpressure: getDataJson.main.pressure.toFixed(0),\n\t\t\t\tweatherDescription: (getDataJson.weather[ 0 ].description).toUpperCase(),\n\t\t\t\tweatherIcon: Icons(getDataJson.weather[ 0 ].id),\n\t\t\t};\n\t\t} catch (err) {\n\t\t\tmessageError(\"Couldn't get weather data\");\n\t\t\treturn { error: true };\n\t\t}\n\t};\n\t\n\tconst weatherForecastData = async () => {\n\t\ttry {\n\t\t\tconst getDataJson = await fetcher(weatherForecastUrl)\n\t\t\t\n\t\t\tconst temperaturesForecast = [];\n\t\t\tconst temperaturesForecastLabels = [];\n\t\t\t\n\t\t\tfor (let i = 0; i < 5; i++) {\n\t\t\t\ttemperaturesForecast[ i ] = Number(kelvinToC(getDataJson.list[ i ].main.temp).toFixed(1));\n\t\t\t\ttemperaturesForecastLabels[ i ] = timeFromTimestamp(getDataJson.list[ i ].dt);\n\t\t\t}\n\t\t\t\n\t\t\tconst cloneTemperaturesForecast = [ ...temperaturesForecast ].sort();\n\t\t\tconst [ maxTemperature, minTemperature ] = [ cloneTemperaturesForecast.pop(),\t\t\t\tcloneTemperaturesForecast.shift() ]\n\t\t\t\n\t\t\treturn {\n\t\t\t\ttemperaturesForecast,\n\t\t\t\ttemperaturesForecastLabels,\n\t\t\t\tmaxTemperature,\n\t\t\t\tminTemperature,\n\t\t\t};\n\t\t} catch (err) {\n\t\t\tmessageError(\"Couldn't get weather data\");\n\t\t\treturn { error: true };\n\t\t}\n\t}\n\t\n\treturn Promise.all([ currentWeatherData(), weatherForecastData() ])\n\t\t.then((responses) => {\n\t\t\tlet weatherData = {\n\t\t\t\tactualTemperature: \"21\",\n\t\t\t\tcityName: \"Tokyo\",\n\t\t\t\tdate: \"Mon, September 13\",\n\t\t\t\thumidity: \"42\",\n\t\t\t\tmaxTemperature: 23,\n\t\t\t\tminTemperature: 17,\n\t\t\t\tpressure: \"1012\",\n\t\t\t\ttemperaturesForecast: [21, 20, 19, 17, 23],\n\t\t\t\ttemperaturesForecastLabels: [\"21:09\", \"00:09\", \"03:09\", \"06:09\", \"09:09\"],\n\t\t\t\tweatherDescription: \"BROKEN CLOUDS\",\n\t\t\t\tweatherIcon: \"wi wi-day-cloudy\",\n\t\t\t\twindSpeed: 2.32,\n\t\t\t\tloaded: true,\n\t\t\t\terror: false\n\t\t\t};\n\t\t\t\n\t\t\tresponses.forEach((response) => {\n\t\t\t\tweatherData = Object.assign(weatherData, response);\n\t\t\t});\n\t\t\t\n\t\t\treturn weatherData;\n\t\t});\n};\n\n\nconst fetchDataWeatherFake = () => {\n\treturn {\n\t\t\"actualTemperature\": \"22\",\n\t\t\"maxTemperature\": 24,\n\t\t\"minTemperature\": 18,\n\t\t\"date\": \"Mon, September 12th\",\n\t\t\"cityName\": \"Tokyo\",\n\t\t\"windSpeed\": 3.91,\n\t\t\"humidity\": \"43\",\n\t\t\"pressure\": \"1016\",\n\t\t\"weatherDescription\": \"OVERCAST CLOUDS\",\n\t\t\"weatherIcon\": \"wi wi-day-cloudy\",\n\t\t\"temperaturesForecast\": [ 21, 24, 22, 19, 18 ],\n\t\t\"temperaturesForecastLabels\": [ \"12:09\", \"15:09\", \"18:09\", \"21:09\", \"00:09\" ],\n\t\t\"loaded\": true\n\t}\n}\n\n\nexport {\n\tfetchDataWeather,\n\tfetchDataWeatherFake\n}\n","import fetcher from \"../libs/fetcher\";\nimport { messageError } from \"../libs/clientMessages/clientMessages\";\n\n\nconst API_KEY = process.env.REACT_APP_IPINFO_API_KEY || \"\";\n\nconst fetchDataLocation = async () => {\n\tlet locationInfo = \"0,0\";\n\t\n\ttry {\n\t\tconst getGeolocation = await fetcher(`https://ipinfo.io/91.214.82.65?token=${ API_KEY }`);\n\t\t\n\t\tlocationInfo = getGeolocation.loc;\n\t} catch (err) {\n\t\tmessageError(\"Your location is not defined\");\n\t}\n\t\n\tconst splitLocationData = locationInfo.split(\",\");\n\t\n\treturn {\n\t\tlatitude: splitLocationData[ 0 ],\n\t\tlongitude: splitLocationData[ 1 ],\n\t}\n\t\n};\n\n\nexport default fetchDataLocation;\n","import React from \"react\";\n\n\nconst Geo = (props) => {\n\tconst { cityName, date } = props;\n\t\n\treturn (<div className=\"geo\">\n\t\t<div className=\"geo__location\">\n\t\t\t{ cityName }\n\t\t</div>\n\t\t<div className=\"geo__date\">{ date }</div>\n\t</div>);\n}\n\n\nexport default Geo;\n","import React from \"react\";\nimport AnimatedNumber from \"animated-number-react\";\n\n\nconst Temperature = (props) => {\n\tconst { actualTemperature, maxTemperature, minTemperature } = props.data;\n\t\n\tconst formatValue = (value) => value.toFixed(0);\n\t\n\treturn (<div className=\"temperature\">\n\t\t<div className=\"temperature__deg\">\n\t\t\t<AnimatedNumber\n\t\t\t\tvalue={ parseInt(actualTemperature) }\n\t\t\t\tformatValue={ formatValue }\n\t\t\t/>\n\t\t</div>\n\t\t<div className=\"temperature__wrap\">\n\t\t\t<div className=\"temperature__mesure\">&deg;C</div>\n\t\t\t\n\t\t\t<div className=\"temperature__box\">\n\t\t\t\t<div className=\"temperature__max\">\n\t\t\t\t\t<span className=\"temperature__mark\">{ '\\u2191' }</span>\n\t\t\t\t\t<p className=\"temperature__text\">\n\t\t\t\t\t\t<AnimatedNumber\n\t\t\t\t\t\t\tvalue={ parseInt(maxTemperature) }\n\t\t\t\t\t\t\tformatValue={ formatValue }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</p>\n\t\t\t\t\t<span className=\"temperature__unit\">&deg;C</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"temperature__min\">\n\t\t\t\t\t<span className=\"temperature__mark\">{ '\\u2193' }</span>\n\t\t\t\t\t<p className=\"temperature__text\">\n\t\t\t\t\t\t<AnimatedNumber\n\t\t\t\t\t\t\tvalue={ parseInt(minTemperature) }\n\t\t\t\t\t\t\tformatValue={ formatValue }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</p>\n\t\t\t\t\t<span className=\"temperature__unit\">&deg;C</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\n\t\t</div>\n\t</div>);\n}\n\n\nexport default Temperature;","import React from \"react\";\nimport AnimatedNumber from \"animated-number-react\";\n\nconst Detail = (props) => {\n\tconst { weatherDescription, weatherIcon, windSpeed, humidity, pressure } = props.data;\n\t\n\tconst formatValue = (value) => value.toFixed(0);\n\t\n\treturn (<div className=\"detail\">\n\t\t<div className=\"detail__wrap\">\n          <span className=\"detail__icon\">\n            <i className={ weatherIcon }/>\n          </span>\n\t\t\t<div className=\"detail__description\">\n\t\t\t\t{ weatherDescription }\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<div className=\"detail__box\">\n\t\t\t<div className=\"detail__indicator\">\n\t\t\t\t<div className=\"detail__info\">\n\t\t\t\t\t<AnimatedNumber\n\t\t\t\t\t\tvalue={ parseFloat(windSpeed) }\n\t\t\t\t\t\tformatValue={ (value) => value.toFixed(2) }\n\t\t\t\t\t/>\n\t\t\t\t\t<span className=\"detail__measure\">m/s</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"detail__name\">wind speed</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className=\"detail__indicator\">\n\t\t\t\t<div className=\"detail__info\">\n\t\t\t\t\t<AnimatedNumber\n\t\t\t\t\t\tvalue={ parseInt(humidity) }\n\t\t\t\t\t\tformatValue={ formatValue }\n\t\t\t\t\t/>\n\t\t\t\t\t<span className=\"detail__measure\">%</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"detail__name\">humidity</div></div>\n\t\t\t\n\t\t\t<div className=\"detail__indicator\">\n\t\t\t\t<div className=\"detail__info\">\n\t\t\t\t\t<AnimatedNumber\n\t\t\t\t\t\tvalue={ parseInt(pressure) }\n\t\t\t\t\t\tformatValue={ formatValue }\n\t\t\t\t\t/>\n\t\t\t\t\t<span className=\"detail__measure\">hpa</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"detail__name\">pressure</div>\n\t\t\t</div>\n\t\t</div>\n\t\n\t</div>);\n}\n\n\nexport default Detail;","import React, { useContext, useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport themeColorList from \"../units/themeColorList.json\";\nimport { ThemeContext } from \"../hock-context/themeContext\";\n\n\nconst Diagram = (props) => {\n\tconst { temperaturesForecast, temperaturesForecastLabels, loaded } = props.data;\n\t\n\tconst [ colorBg, setColorBg ] = useState(\"#fff\");\n\tconst [ colorText, setColorText ] = useState(\"#495758\");\n\tconst [ colorPrimary, setColorPrimary ] = useState(\"#1fa69d\");\n\tconst { theme } = useContext(ThemeContext);\n\t\n\t\n\tuseEffect(() => {\n\t\ttry {\n\t\t\t// get data theme from json\n\t\t\tconst findTheme = themeColorList.filter(themeColor => themeColor.theme === theme)[ 0 ];\n\t\t\t\n\t\t\tsetColorBg(findTheme.bg);\n\t\t\tsetColorText(findTheme.text);\n\t\t\tsetColorPrimary(findTheme.primary);\n\t\t} catch (err) {\n\t\t\t// read data-theme styles variables from body :root index.html\n\t\t\tconst getLinkOnBody = document.body;\n\t\t\tconst getCssVarContainer = getComputedStyle(getLinkOnBody);\n\n\t\t\tsetColorBg(getCssVarContainer.getPropertyValue('--color-bg'));\n\t\t\tsetColorText(getCssVarContainer.getPropertyValue('--color-text'));\n\t\t\tsetColorPrimary(getCssVarContainer.getPropertyValue('--color-primary'));\n\t\t}\n\t}, [ loaded, theme ]);\n\t\n\t\n\tconst diagramOptions = {\n\t\tseries: [{\n\t\t\tname: 'Inflation',\n\t\t\tdata: [ ...temperaturesForecast ]\n\t\t}],\n\t\toptions: {\n\t\t\tchart: {\n\t\t\t\theight: 350,\n\t\t\t\ttype: 'bar',\n\t\t\t},\n\t\t\tcolors: colorPrimary,\n\t\t\tplotOptions: {\n\t\t\t\tbar: {\n\t\t\t\t\tdataLabels: {\n\t\t\t\t\t\tposition: 'center', // top, center, bottom\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t\tdataLabels: {\n\t\t\t\tenabled: true,\n\t\t\t\tformatter: function (val) {\n\t\t\t\t\treturn val + \"°C\";\n\t\t\t\t},\n\t\t\t\toffsetY: 10,\n\t\t\t\tstyle: {\n\t\t\t\t\tfontSize: '1.6rem',\n\t\t\t\t\tcolors: [ colorBg ]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\txaxis: {\n\t\t\t\tcategories: [ ...temperaturesForecastLabels ],\n\t\t\t\tposition: 'bottom',\n\t\t\t\taxisBorder: {\n\t\t\t\t\tshow: true\n\t\t\t\t},\n\t\t\t\taxisTicks: {\n\t\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\tlabels: {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tcolors: colorText,\n\t\t\t\t\t\tfontSize: '1.5rem'\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tyaxis: {\n\t\t\t\taxisBorder: {\n\t\t\t\t\tshow: true\n\t\t\t\t},\n\t\t\t\taxisTicks: {\n\t\t\t\t\tshow: false,\n\t\t\t\t},\n\t\t\t\tlabels: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\talign: 'right',\n\t\t\t\t\tformatter: function (val) {\n\t\t\t\t\t\treturn val + \"°C\";\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tcolors: colorText,\n\t\t\t\t\t\tfontSize: '1.5rem'\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t}\n\t\n\treturn (<div className=\"diagram\">\n\t\t<Chart\n\t\t\ttype=\"bar\"\n\t\t\t// height={ 280 }\n\t\t\toptions={ diagramOptions.options }\n\t\t\tseries={diagramOptions.series}\n\t\t/>\n\t</div>);\n}\n\n\nexport default Diagram;","import React, { useEffect, useRef, useState } from 'react';\nimport fetcher from \"../libs/fetcher\";\nimport { messageError } from \"../libs/clientMessages/clientMessages\";\n// import fakeLocationSuggestion from \"../units/fakeLocationSuggestion.json\";\n\n\nconst API_KEY = process.env.REACT_APP_AUTOCOMPLETE_API_KEY || \"\";\nconst MAX_RESULT = 50;\n\nconst Search = (props) => {\n  const { onLocationChange = () => {} } = props;\n  \n  const isCancelled = useRef(false);\n  // const isCancelled = useRef(true);\n  const [ users, setUsers ] = useState([]);\n  const [ text, setText ] = useState(\"\");\n  const [ suggestions, setSuggestions ] = useState([]);\n  // const [ suggestions, setSuggestions ] = useState(fakeLocationSuggestion);\n  \n  // the index of the drop-down list item to select using the up and down keys.\n  // After pressing, the enter will return to position -1\n  const [ focusSuggestion, setFocusSuggestion ] = useState(-1);\n  \n  \n  useEffect(() => {\n    const loadUsers = async () => {\n      try {\n        const URL = `https://autocomplete.geocoder.ls.hereapi.com/6.2/suggest.json?query=${ encodeURIComponent(text) }&maxresults=${ MAX_RESULT }&apikey=${ API_KEY }`;\n        \n        const res = await fetcher(URL);\n        const suggestionsCollection = res.suggestions;\n        \n        const suggestionsFilter = _cityFilter(suggestionsCollection);\n        \n        if (suggestionsFilter) {\n          setUsers(suggestionsFilter);\n        }\n        \n      } catch (err) {\n        messageError(\"Sorry, something wrong with input autocomplete\");\n        isCancelled.current = true;\n      }\n    }\n    \n    // If an error occurs while receiving data from the server,\n    // then we no longer make a request to the server\n    if (!isCancelled.current && text.length) {\n      _clearFocusSuggestion();\n      _clearSuggestion(text)\n      \n      loadUsers();\n    }\n    \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ text ]);\n\n  \n  const _cityFilter = (suggestionArr) => {\n    if (suggestionArr) {\n      return suggestionArr\n        .filter(suggestObj => [ \"district\", \"city\" ].includes(suggestObj.matchLevel))\n    }\n    \n    return suggestionArr;\n  }\n  \n  const _clearFocusSuggestion = () => {\n    if (focusSuggestion !== -1) {\n      setFocusSuggestion(-1);\n    }\n  }\n  \n  const _clearSuggestion = (text) => {\n    if (!text.length && suggestions.length) {\n      setSuggestions([]);\n    }\n  }\n  \n  const _cityNameLayout = (suggestion) => {\n    const countyName = suggestion.address.county || \"\";\n    const cityName = suggestion.address.district || suggestion.address.city || \"\" ;\n    \n    return `${ cityName }, ${ countyName }`;\n  }\n  \n  \n  const handleChangeValue = (event) => {\n    const text = event.target.value;\n    \n    setSuggestions(users);\n    setText(text);\n  }\n  \n  const handleSuggestClick = text => {\n    setText(text);\n    setSuggestions([]);\n  }\n  \n  const handleClearField = () => {\n    setTimeout(() => {\n      setSuggestions([]);\n    }, 100)\n  }\n  \n  const handleKeyCatcher = (event) => {\n    if (\n      (event.key === \"ArrowUp\" || event.code === \" ArrowUp\")\n      && focusSuggestion > -1\n    ) {\n      setFocusSuggestion(focusSuggestion - 1);\n    }\n    \n    const maxSuggest = suggestions.length - 1;\n    if (\n      (event.key === \"ArrowDown\" || event.code === \" ArrowDown\")\n      && focusSuggestion !== maxSuggest\n    ) {\n      setFocusSuggestion(focusSuggestion + 1);\n    }\n    \n    if (\n      (event.key === \"Enter\" || event.code === \" Enter\")\n      && focusSuggestion !== -1\n    ) {\n      setText(_cityNameLayout(suggestions[ focusSuggestion ]));\n      handleClearField();\n    }\n  }\n  \n  const handleClickButton = (event) => {\n    onLocationChange(text);\n  \n    _clearFocusSuggestion();\n    handleClearField();\n    setText(\"\");\n  }\n  \n  return (\n    <div className=\"search\">\n      <div className=\"search__wrap\">\n        <input\n          type=\"search\"\n          role=\"search\"\n          placeholder=\"Search for a location\"\n          className=\"search__input\"\n          onChange={ handleChangeValue }\n          onBlur={ handleClearField }\n          onKeyDown={ handleKeyCatcher }\n          value={ text }\n        />\n        \n        <button\n          type=\"submit\"\n          className=\"search__button\"\n          onClick={ handleClickButton }\n        >\n          <svg\n            width=\"24\"\n            height=\"24\"\n            fill=\"none\"\n            className=\"search__icon\"\n          >\n            <path\n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        </button>\n        {\n          suggestions.length\n            ? <ul className=\"search__autocomplete\">{\n              suggestions\n                .map((suggestion, index) => {\n                  return <li\n                    className={ \"search__autocomplete-item \" + ((focusSuggestion === index) ? \"search__autocomplete-item--color\" : \"\") }\n                    key={ suggestion.locationId }\n                    onClick={ () => handleSuggestClick(_cityNameLayout(suggestion)) }\n                  >{ _cityNameLayout(suggestion) }</li>\n                })\n            }</ul>\n            : null\n        }\n      </div>\n    </div>\n  );\n};\n\n// Search.propTypes = {\n//   isSearching: PropTypes.bool,\n//   location: PropTypes.string.isRequired,\n//   onLocationChange: PropTypes.func.isRequired,\n// };\n\nexport default Search;\n","import React, { useContext } from \"react\";\nimport { ThemeContext } from \"../hock-context/themeContext\";\nimport themeColorList from \"../units/themeColorList.json\";\nimport useComponentVisible from \"../hock-context/useComponentVisible\";\n\n\nconst ThemeSwitcher = (props) => {\n\tconst { theme, setTheme } = useContext(ThemeContext);\n\tconst { ref, isComponentVisible, setIsComponentVisible } = useComponentVisible(false);\n\t\n\t\n\tconst toggleThemeList = () => setIsComponentVisible(!isComponentVisible);\n\t\n\tconst handleChangeTheme = (themeObj) => (event) => {\n\t\tif (themeObj.theme !== theme) {\n\t\t\tsetTheme(themeObj.theme);\n\t\t}\n\t\t\n\t\ttoggleThemeList();\n\t}\n\t\n\treturn(\n\t\t<div className=\"theme-switcher\" ref={ ref }>\n\t\t\t<span\n\t\t\t\tclassName=\"theme-switcher__main\"\n\t\t\t\tonClick={ toggleThemeList }\n\t\t\t/>\n\t\t\t<ul className={ \"theme-switcher__dropdown \" + ((!isComponentVisible) ? \"theme-switcher__dropdown-hide\" : \"\") }\n\t\t\t>\n\t\t\t\t{ themeColorList.map(theme => {\n\t\t\t\t\treturn <li className=\"theme-switcher__item\" key={ theme.id }>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"theme-switcher__toggle\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tboxShadow: `0 0 5px ${ theme.secondary }`,\n\t\t\t\t\t\t\t\tborder: `2px solid ${ theme.primary }`,\n\t\t\t\t\t\t\t\tbackground: theme.bg\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={ handleChangeTheme(theme) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t}) }\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\n\nexport default ThemeSwitcher;","import { useEffect, useRef, useState } from \"react\";\n\n\nexport default function useComponentVisible(initialIsVisible) {\n\tconst [isComponentVisible, setIsComponentVisible] = useState(initialIsVisible);\n\tconst ref = useRef(null);\n\t\n\tconst handleClickOutside = (event) => {\n\t\tif (ref.current && !ref.current.contains(event.target)) {\n\t\t\tsetIsComponentVisible(false);\n\t\t}\n\t};\n\t\n\tuseEffect(() => {\n\t\tdocument.addEventListener('click', handleClickOutside, true);\n\t\t\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('click', handleClickOutside, true);\n\t\t};\n\t}, []);\n\t\n\treturn { ref, isComponentVisible, setIsComponentVisible };\n}\n","import React, { Fragment } from \"react\";\n\nimport { fetchDataWeather, fetchDataWeatherFake } from './units/fetchDataWeather';\nimport fetchDataLocation from \"./units/fetchDataLocation\";\n\nimport Geo from \"./components/geo.component\";\nimport Temperature from \"./components/temperature.component\";\nimport Detail from \"./components/detail.component\";\nimport Diagram from \"./components/diagram.component\";\nimport Search from \"./components/search.component\";\nimport ThemeSwitcher from \"./components/theme-switcher.component\";\n\n\nclass AppContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      actualTemperature: '0',\n      maxTemperature: '0',\n      minTemperature: '0',\n      date: 'Fri, May 6',\n      cityName: 'City Name',\n      windSpeed: '0',\n      humidity: '0',\n      pressure: '0',\n      weatherDescription: 'clouds',\n      weatherIcon: 'wi wi-day-cloudy',\n      temperaturesForecast: [ -10, -5, 0, 5, 10 ],\n      temperaturesForecastLabels: [ \"09:00\", \"12:00\", \"15:00\", \"18:00\", \"21:00\" ],\n      loaded: false,\n      error: false,\n      theme: 'default'\n    };\n  }\n  \n  componentDidMount() {\n    this.getData();\n    // this.getFakeData();\n  }\n  \n  getFakeData() {\n    setTimeout(() => {\n      this.setState({ ...fetchDataWeatherFake() });\n    }, 1000)\n  }\n  \n  // Fetch the data using the gps coordinates\n  async getData() {\n    const getLocation = await fetchDataLocation();\n    const weatherData = await fetchDataWeather(getLocation);\n    \n    this.setState({ ...weatherData });\n  }\n  \n  \n  handleLocationChange = async (inputText) => {\n    const weatherData = await fetchDataWeather({ cityName: inputText });\n    \n    if (!weatherData.error) {\n      this.setState({ ...weatherData });\n    }\n  };\n  \n  render() {\n    const {\n      cityName, date,\n      actualTemperature, maxTemperature, minTemperature,\n      weatherDescription, weatherIcon, windSpeed, humidity, pressure,\n      temperaturesForecast, temperaturesForecastLabels,\n      loaded\n    } = this.state;\n    \n    return (\n      <Fragment>\n        <div className=\"main\">\n          <div className=\"panel\">\n            <Search onLocationChange={ this.handleLocationChange }/>\n            <ThemeSwitcher />\n          </div>\n          \n          <Geo cityName={ cityName } date={ date } />\n          \n          <Temperature data={{ actualTemperature, maxTemperature, minTemperature }} />\n          \n          <Detail data={{ weatherDescription, weatherIcon, windSpeed, humidity, pressure }}/>\n          \n          <Diagram data={{ temperaturesForecast, temperaturesForecastLabels, loaded }}/>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default AppContainer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'vercel-toast/dist/vercel-toast.css';\nimport './main.css';\nimport { ThemeProvider } from \"./hock-context/themeContext\";\nimport App from './app.container';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}