{"version":3,"sources":["hock-context/themeContext.js","utils/icons.js","utils/temperatureConvert.js","utils/timeConverter.js","libs/fetcher.js","libs/clientMessages/clientMessages.js","utils/fetchDataWeather.js","utils/fetchDataLocation.js","components/geo.component.jsx","components/temperature.component.jsx","components/detail.component.jsx","components/diagram.component.jsx","components/themeSwitcher.component.jsx","hock-context/useComponentVisible.js","components/search.component.jsx","containers/autocomplete.container.jsx","containers/app.container.jsx","index.js"],"names":["STORAGE_NAME_THEME_COLOR","process","getInitialTheme","window","localStorage","storedPrefs","getItem","setItem","ThemeContext","createContext","ThemeProvider","initialTheme","children","useState","theme","setTheme","useEffect","rawSetTheme","rawTheme","document","body","setAttribute","Provider","value","Icons","iconId","icon","icons","kelvinToC","kelvin","Math","round","dateFromTimestamp","timestamp","date","Date","moment","format","timeFromTimestamp","fetcher","url","a","fetch","response","ok","handleError","status","json","getJson","errorCode","error","Error","messageError","text","delay","createToast","timeout","type","API_KEY","BASE_URL","fetchDataWeather","latitude","longitude","cityName","geoCoordinates","encodeURIComponent","currentWeatherUrl","weatherForecastUrl","currentWeatherData","getDataJson","actualTemperature","main","temp","toFixed","dt","name","windSpeed","wind","speed","humidity","pressure","weatherDescription","weather","description","toUpperCase","weatherIcon","id","weatherForecastData","temperaturesForecast","temperaturesForecastLabels","i","Number","list","cloneTemperaturesForecast","sort","pop","shift","maxTemperature","minTemperature","Promise","all","then","responses","weatherData","loaded","forEach","Object","assign","fetchDataLocation","locationInfo","getGeolocation","loc","splitLocationData","split","Geo","props","data","className","Temperature","formatValue","parseInt","Detail","parseFloat","Diagram","colorBg","setColorBg","colorText","setColorText","colorPrimary","setColorPrimary","useContext","findTheme","themeColorList","filter","themeColor","bg","primary","err","getLinkOnBody","getCssVarContainer","getComputedStyle","getPropertyValue","diagramOptions","series","options","chart","height","colors","plotOptions","bar","dataLabels","position","enabled","formatter","val","offsetY","style","fontSize","xaxis","categories","axisBorder","show","axisTicks","tooltip","labels","yaxis","align","ThemeSwitcher","initialIsVisible","isComponentVisible","setIsComponentVisible","ref","useRef","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","useComponentVisible","toggleThemeList","handleChangeTheme","themeObj","onClick","map","boxShadow","secondary","border","background","Search","onChangeValue","onClearField","onKeyCatcher","onClickButton","textValue","role","placeholder","onChange","onBlur","onKeyDown","width","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","AutocompleteContainer","onLocationChange","isCancelled","setTextValue","cities","setCities","suggestions","setSuggestions","focusSuggestion","setFocusSuggestion","loadUsers","URL","res","suggestionsCollection","suggestionsFilter","_cityFilter","_clearFocusSuggestion","_clearSuggestion","suggestionArr","suggestObj","includes","matchLevel","length","_cityNameLayout","suggestion","countyName","address","county","district","city","handleClearField","setTimeout","key","code","maxSuggest","textClick","innerText","index","locationId","AppContainer","_setDataWeather","dataWeather","setState","_getData","getLocation","handleLocationChange","inputText","state","this","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5b64b203.chunk.js","sourcesContent":["import { useEffect, useState, createContext } from 'react';\n\n\nconst STORAGE_NAME_THEME_COLOR = process.env.REACT_APP_STORAGE_NAME_THEME_COLOR || \"color\";\n\nconst getInitialTheme = () => {\n  if (typeof window !== 'undefined' && window.localStorage) {\n    const storedPrefs = window.localStorage.getItem(STORAGE_NAME_THEME_COLOR);\n    \n    if (!storedPrefs) {\n      window.localStorage.setItem(STORAGE_NAME_THEME_COLOR, 'default');\n      return 'default';\n    }\n    \n    return storedPrefs;\n  }\n  \n  return 'default';\n};\n\n\nexport const ThemeContext = createContext();\n\n\nexport const ThemeProvider = ({ initialTheme, children }) => {\n  const [ theme, setTheme ] = useState(getInitialTheme);\n  \n  useEffect(() => {\n    rawSetTheme(theme);\n  }, [ theme ]);\n  \n  const rawSetTheme = (rawTheme) => {\n    const getThemeSwitcher = document.body;\n    // data-theme custom attribute for switching skins. Is in index.html <body data-theme=\"default\">\n    getThemeSwitcher.setAttribute(\"data-theme\", rawTheme);\n    \n    localStorage.setItem(STORAGE_NAME_THEME_COLOR, rawTheme);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      { children }\n    </ThemeContext.Provider>\n  );\n};\n","import icons from './iconsList.json';\n\nexport default function Icons (iconId) {\n  const prefix = 'wi wi-';\n  let icon = icons[ iconId ].icon;\n  \n  // If we are not in the ranges mentioned above, add a day/night prefix.\n  if (!(iconId > 699 && iconId < 800) && !(iconId > 899 && iconId < 1000)) {\n    icon = 'day-' + icon;\n  }\n  \n  return prefix + icon;\n}\n","// Convert degree Kelvin to degree Celsius\nconst kelvinToC = (kelvin) => Math.round(kelvin - 273);\n\n\nexport {\n  kelvinToC\n}\n","import moment from \"moment\";\n\n\n// Get date from Unix timestamp\nconst dateFromTimestamp = (timestamp) => {\n\tconst date = new Date(timestamp * 1000);\n\treturn moment(date).format(\"ddd, MMMM DD\");\n};\n\n// Get time from Unix timestamp\nconst timeFromTimestamp = (timestamp) => {\n\tconst date = new Date(timestamp * 1000);\n\treturn moment(date).format(\"HH:MM\");\n};\n\n\nexport {\n\tdateFromTimestamp,\n\ttimeFromTimestamp\n}","export default async function fetcher(url) {\n  const response = await fetch(url)\n  \n  if (!response.ok) {\n    const error = handleError(response.status);\n    throw error;\n  }\n  \n  const getJson = await response.json();\n\n  return getJson;\n}\n\nfunction handleError(errorCode) {\n  let error;\n  \n  switch (errorCode) {\n    case 401:\n      error = \"It looks like the API did not authorize your request. Please ensure you have a valid API key.\";\n      break;\n      \n    case 404:\n      error = \"No results found. Check your query again or try searching for a different location.\";\n      break;\n      \n    case 429:\n      error = \"It looks like you've made too many requests to the server. Please wait a while before trying again.\";\n      break;\n      \n    default:\n      error = \"Sorry. Something went wrong, we'll fix it soon\";\n      break;\n  }\n  \n  return new Error(error);\n}\n","import { createToast } from \"vercel-toast\";\nimport \"./clientMessages.css\";\n\n\nconst messageError = (text, delay = 5000) => createToast(text, {\n\ttimeout: delay,\n\ttype: 'error'\n});\n\n\nexport {\n\tmessageError\n}\n\n","import Icons from \"./icons\";\nimport { kelvinToC } from \"./temperatureConvert\";\nimport { dateFromTimestamp, timeFromTimestamp } from \"./timeConverter\";\nimport fetcher from \"../libs/fetcher\";\nimport { messageError } from \"../libs/clientMessages/clientMessages\";\n\n\nconst API_KEY = process.env.REACT_APP_OPENWEATHERMAP_API_KEY || \"\";\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5/\";\n\n\nconst fetchDataWeather = ({ latitude, longitude, cityName }) => {\n\tlet geoCoordinates = `&lat=${ latitude }&lon=${ longitude }`;\n\t\n\tif (cityName) {\n\t\tgeoCoordinates = `&q=${ encodeURIComponent(cityName) }`;\n\t}\n\t\n\tconst currentWeatherUrl = `${ BASE_URL }weather?appid=${ API_KEY }${ geoCoordinates }`;\n\tconst weatherForecastUrl = `${ BASE_URL }forecast?appid=${ API_KEY }${ geoCoordinates }`;\n\t\n\tconst currentWeatherData = async () => {\n\t\ttry {\n\t\t\tconst getDataJson = await fetcher(currentWeatherUrl);\n\t\t\t\n\t\t\treturn  {\n\t\t\t\tactualTemperature: kelvinToC(getDataJson.main.temp).toFixed(0),\n\t\t\t\tdate: dateFromTimestamp(getDataJson.dt),\n\t\t\t\tcityName: getDataJson.name,\n\t\t\t\twindSpeed: getDataJson.wind.speed,\n\t\t\t\thumidity: getDataJson.main.humidity.toFixed(0),\n\t\t\t\tpressure: getDataJson.main.pressure.toFixed(0),\n\t\t\t\tweatherDescription: (getDataJson.weather[ 0 ].description).toUpperCase(),\n\t\t\t\tweatherIcon: Icons(getDataJson.weather[ 0 ].id),\n\t\t\t};\n\t\t} catch (err) {\n\t\t\tmessageError(\"Couldn't get weather data\");\n\t\t\treturn { error: true };\n\t\t}\n\t};\n\t\n\tconst weatherForecastData = async () => {\n\t\ttry {\n\t\t\tconst getDataJson = await fetcher(weatherForecastUrl)\n\t\t\t\n\t\t\tconst temperaturesForecast = [];\n\t\t\tconst temperaturesForecastLabels = [];\n\t\t\t\n\t\t\tfor (let i = 0; i < 5; i++) {\n\t\t\t\ttemperaturesForecast[ i ] = Number(kelvinToC(getDataJson.list[ i ].main.temp).toFixed(1));\n\t\t\t\ttemperaturesForecastLabels[ i ] = timeFromTimestamp(getDataJson.list[ i ].dt);\n\t\t\t}\n\t\t\t\n\t\t\tconst cloneTemperaturesForecast = [ ...temperaturesForecast ].sort();\n\t\t\tconst [ maxTemperature, minTemperature ] = [ cloneTemperaturesForecast.pop(),\t\t\t\tcloneTemperaturesForecast.shift() ]\n\t\t\t\n\t\t\treturn {\n\t\t\t\ttemperaturesForecast,\n\t\t\t\ttemperaturesForecastLabels,\n\t\t\t\tmaxTemperature,\n\t\t\t\tminTemperature,\n\t\t\t};\n\t\t} catch (err) {\n\t\t\tmessageError(\"Couldn't get weather data\");\n\t\t\treturn { error: true };\n\t\t}\n\t}\n\t\n\treturn Promise.all([ currentWeatherData(), weatherForecastData() ])\n\t\t.then((responses) => {\n\t\t\tlet weatherData = {\n\t\t\t\tactualTemperature: \"21\",\n\t\t\t\tcityName: \"Tokyo\",\n\t\t\t\tdate: \"Mon, September 13\",\n\t\t\t\thumidity: \"42\",\n\t\t\t\tmaxTemperature: 23,\n\t\t\t\tminTemperature: 17,\n\t\t\t\tpressure: \"1012\",\n\t\t\t\ttemperaturesForecast: [21, 20, 19, 17, 23],\n\t\t\t\ttemperaturesForecastLabels: [\"21:09\", \"00:09\", \"03:09\", \"06:09\", \"09:09\"],\n\t\t\t\tweatherDescription: \"BROKEN CLOUDS\",\n\t\t\t\tweatherIcon: \"wi wi-day-cloudy\",\n\t\t\t\twindSpeed: 2.32,\n\t\t\t\tloaded: true,\n\t\t\t\terror: false\n\t\t\t};\n\t\t\t\n\t\t\tresponses.forEach((response) => {\n\t\t\t\tweatherData = Object.assign(weatherData, response);\n\t\t\t});\n\t\t\t\n\t\t\treturn weatherData;\n\t\t});\n};\n\n\nconst fetchDataWeatherFake = () => {\n\treturn {\n\t\t\"actualTemperature\": \"22\",\n\t\t\"maxTemperature\": 24,\n\t\t\"minTemperature\": 18,\n\t\t\"date\": \"Mon, September 12th\",\n\t\t\"cityName\": \"Tokyo\",\n\t\t\"windSpeed\": 3.91,\n\t\t\"humidity\": \"43\",\n\t\t\"pressure\": \"1016\",\n\t\t\"weatherDescription\": \"OVERCAST CLOUDS\",\n\t\t\"weatherIcon\": \"wi wi-day-cloudy\",\n\t\t\"temperaturesForecast\": [ 21, 24, 22, 19, 18 ],\n\t\t\"temperaturesForecastLabels\": [ \"12:09\", \"15:09\", \"18:09\", \"21:09\", \"00:09\" ],\n\t\t\"loaded\": true\n\t}\n}\n\n\nexport {\n\tfetchDataWeather,\n\tfetchDataWeatherFake\n}\n","import fetcher from \"../libs/fetcher\";\nimport { messageError } from \"../libs/clientMessages/clientMessages\";\n\n\nconst API_KEY = process.env.REACT_APP_IPINFO_API_KEY || \"\";\n\nconst fetchDataLocation = async () => {\n\tlet locationInfo = \"0,0\";\n\t\n\ttry {\n\t\tconst getGeolocation = await fetcher(`https://ipinfo.io/91.214.82.65?token=${ API_KEY }`);\n\t\t\n\t\tlocationInfo = getGeolocation.loc;\n\t} catch (err) {\n\t\tmessageError(\"Your location is not defined\");\n\t}\n\t\n\tconst splitLocationData = locationInfo.split(\",\");\n\t\n\treturn {\n\t\tlatitude: splitLocationData[ 0 ],\n\t\tlongitude: splitLocationData[ 1 ],\n\t}\n\t\n};\n\n\nexport default fetchDataLocation;\n","import React from \"react\";\n\n\nconst Geo = (props) => {\n\tconst { cityName, date } = props.data;\n\t\n\treturn (<div className=\"geo\">\n\t\t<div className=\"geo__location\">\n\t\t\t{ cityName }\n\t\t</div>\n\t\t<div className=\"geo__date\">{ date }</div>\n\t</div>);\n}\n\n\nexport default Geo;\n","import React from \"react\";\nimport AnimatedNumber from \"animated-number-react\";\n\n\nconst Temperature = (props) => {\n\tconst { actualTemperature, maxTemperature, minTemperature } = props.data;\n\t\n\tconst formatValue = (value) => value.toFixed(0);\n\t\n\treturn (<div className=\"temperature\">\n\t\t<div className=\"temperature__deg\">\n\t\t\t<AnimatedNumber\n\t\t\t\tvalue={ parseInt(actualTemperature) }\n\t\t\t\tformatValue={ formatValue }\n\t\t\t/>\n\t\t</div>\n\t\t<div className=\"temperature__wrap\">\n\t\t\t<div className=\"temperature__mesure\">&deg;C</div>\n\t\t\t\n\t\t\t<div className=\"temperature__box\">\n\t\t\t\t<div className=\"temperature__max\">\n\t\t\t\t\t<span className=\"temperature__mark\">{ '\\u2191' }</span>\n\t\t\t\t\t<p className=\"temperature__text\">\n\t\t\t\t\t\t<AnimatedNumber\n\t\t\t\t\t\t\tvalue={ parseInt(maxTemperature) }\n\t\t\t\t\t\t\tformatValue={ formatValue }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</p>\n\t\t\t\t\t<span className=\"temperature__unit\">&deg;C</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"temperature__min\">\n\t\t\t\t\t<span className=\"temperature__mark\">{ '\\u2193' }</span>\n\t\t\t\t\t<p className=\"temperature__text\">\n\t\t\t\t\t\t<AnimatedNumber\n\t\t\t\t\t\t\tvalue={ parseInt(minTemperature) }\n\t\t\t\t\t\t\tformatValue={ formatValue }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</p>\n\t\t\t\t\t<span className=\"temperature__unit\">&deg;C</span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\n\t\t</div>\n\t</div>);\n}\n\n\nexport default Temperature;","import React from \"react\";\nimport AnimatedNumber from \"animated-number-react\";\n\nconst Detail = (props) => {\n\tconst { weatherDescription, weatherIcon, windSpeed, humidity, pressure } = props.data;\n\t\n\tconst formatValue = (value) => value.toFixed(0);\n\t\n\treturn (<div className=\"detail\">\n\t\t<div className=\"detail__wrap\">\n          <span className=\"detail__icon\">\n            <i className={ weatherIcon }/>\n          </span>\n\t\t\t<div className=\"detail__description\">\n\t\t\t\t{ weatherDescription }\n\t\t\t</div>\n\t\t</div>\n\t\t\n\t\t<div className=\"detail__box\">\n\t\t\t<div className=\"detail__indicator\">\n\t\t\t\t<div className=\"detail__info\">\n\t\t\t\t\t<AnimatedNumber\n\t\t\t\t\t\tvalue={ parseFloat(windSpeed) }\n\t\t\t\t\t\tformatValue={ (value) => value.toFixed(2) }\n\t\t\t\t\t/>\n\t\t\t\t\t<span className=\"detail__measure\">m/s</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"detail__name\">wind speed</div>\n\t\t\t</div>\n\t\t\t\n\t\t\t<div className=\"detail__indicator\">\n\t\t\t\t<div className=\"detail__info\">\n\t\t\t\t\t<AnimatedNumber\n\t\t\t\t\t\tvalue={ parseInt(humidity) }\n\t\t\t\t\t\tformatValue={ formatValue }\n\t\t\t\t\t/>\n\t\t\t\t\t<span className=\"detail__measure\">%</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"detail__name\">humidity</div></div>\n\t\t\t\n\t\t\t<div className=\"detail__indicator\">\n\t\t\t\t<div className=\"detail__info\">\n\t\t\t\t\t<AnimatedNumber\n\t\t\t\t\t\tvalue={ parseInt(pressure) }\n\t\t\t\t\t\tformatValue={ formatValue }\n\t\t\t\t\t/>\n\t\t\t\t\t<span className=\"detail__measure\">hpa</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"detail__name\">pressure</div>\n\t\t\t</div>\n\t\t</div>\n\t\n\t</div>);\n}\n\n\nexport default Detail;","import React, { useContext, useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport themeColorList from \"../utils/themeColorList.json\";\nimport { ThemeContext } from \"../hock-context/themeContext\";\n\n\nconst Diagram = (props) => {\n\tconst { temperaturesForecast, temperaturesForecastLabels, loaded } = props.data;\n\t\n\tconst [ colorBg, setColorBg ] = useState(\"#fff\");\n\tconst [ colorText, setColorText ] = useState(\"#495758\");\n\tconst [ colorPrimary, setColorPrimary ] = useState(\"#1fa69d\");\n\tconst { theme } = useContext(ThemeContext);\n\t\n\t\n\tuseEffect(() => {\n\t\ttry {\n\t\t\t// get data theme from json\n\t\t\tconst findTheme = themeColorList.filter(themeColor => themeColor.theme === theme)[ 0 ];\n\t\t\t\n\t\t\tsetColorBg(findTheme.bg);\n\t\t\tsetColorText(findTheme.text);\n\t\t\tsetColorPrimary(findTheme.primary);\n\t\t} catch (err) {\n\t\t\t// read data-theme styles variables from body :root index.html\n\t\t\tconst getLinkOnBody = document.body;\n\t\t\tconst getCssVarContainer = getComputedStyle(getLinkOnBody);\n\n\t\t\tsetColorBg(getCssVarContainer.getPropertyValue('--color-bg'));\n\t\t\tsetColorText(getCssVarContainer.getPropertyValue('--color-text'));\n\t\t\tsetColorPrimary(getCssVarContainer.getPropertyValue('--color-primary'));\n\t\t}\n\t}, [ loaded, theme ]);\n\t\n\t\n\tconst diagramOptions = {\n\t\tseries: [{\n\t\t\tname: 'Inflation',\n\t\t\tdata: [ ...temperaturesForecast ]\n\t\t}],\n\t\toptions: {\n\t\t\tchart: {\n\t\t\t\theight: 350,\n\t\t\t\ttype: 'bar',\n\t\t\t},\n\t\t\tcolors: colorPrimary,\n\t\t\tplotOptions: {\n\t\t\t\tbar: {\n\t\t\t\t\tdataLabels: {\n\t\t\t\t\t\tposition: 'center', // top, center, bottom\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t\tdataLabels: {\n\t\t\t\tenabled: true,\n\t\t\t\tformatter: function (val) {\n\t\t\t\t\treturn val + \"°C\";\n\t\t\t\t},\n\t\t\t\toffsetY: 10,\n\t\t\t\tstyle: {\n\t\t\t\t\tfontSize: '1.6rem',\n\t\t\t\t\tcolors: [ colorBg ]\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\txaxis: {\n\t\t\t\tcategories: [ ...temperaturesForecastLabels ],\n\t\t\t\tposition: 'bottom',\n\t\t\t\taxisBorder: {\n\t\t\t\t\tshow: true\n\t\t\t\t},\n\t\t\t\taxisTicks: {\n\t\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tenabled: false,\n\t\t\t\t},\n\t\t\t\tlabels: {\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tcolors: colorText,\n\t\t\t\t\t\tfontSize: '1.5rem'\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tyaxis: {\n\t\t\t\taxisBorder: {\n\t\t\t\t\tshow: true\n\t\t\t\t},\n\t\t\t\taxisTicks: {\n\t\t\t\t\tshow: false,\n\t\t\t\t},\n\t\t\t\tlabels: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\talign: 'right',\n\t\t\t\t\tformatter: function (val) {\n\t\t\t\t\t\treturn val + \"°C\";\n\t\t\t\t\t},\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tcolors: colorText,\n\t\t\t\t\t\tfontSize: '1.5rem'\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t}\n\t\n\treturn (<div className=\"diagram\">\n\t\t<Chart\n\t\t\ttype=\"bar\"\n\t\t\t// height={ 280 }\n\t\t\toptions={ diagramOptions.options }\n\t\t\tseries={diagramOptions.series}\n\t\t/>\n\t</div>);\n}\n\n\nexport default Diagram;","import { useContext } from \"react\";\nimport { ThemeContext } from \"../hock-context/themeContext\";\nimport themeColorList from \"../utils/themeColorList.json\";\nimport useComponentVisible from \"../hock-context/useComponentVisible\";\n\n\nconst ThemeSwitcher = (props) => {\n\tconst { theme, setTheme } = useContext(ThemeContext);\n\tconst { ref, isComponentVisible, setIsComponentVisible } = useComponentVisible(false);\n\t\n\t\n\tconst toggleThemeList = () => setIsComponentVisible(!isComponentVisible);\n\t\n\tconst handleChangeTheme = (themeObj) => (event) => {\n\t\tif (themeObj.theme !== theme) {\n\t\t\tsetTheme(themeObj.theme);\n\t\t}\n\t\t\n\t\ttoggleThemeList();\n\t}\n\t\n\treturn(\n\t\t<div className=\"theme-switcher\" ref={ ref }>\n\t\t\t<span\n\t\t\t\tclassName=\"theme-switcher__main\"\n\t\t\t\tonClick={ toggleThemeList }\n\t\t\t/>\n\t\t\t<ul className={ \"theme-switcher__dropdown \" + ((!isComponentVisible) ? \"theme-switcher__dropdown-hide\" : \"\") }\n\t\t\t>\n\t\t\t\t{ themeColorList.map(theme => {\n\t\t\t\t\treturn <li className=\"theme-switcher__item\" key={ theme.id }>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"theme-switcher__toggle\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tboxShadow: `0 0 5px ${ theme.secondary }`,\n\t\t\t\t\t\t\t\tborder: `2px solid ${ theme.primary }`,\n\t\t\t\t\t\t\t\tbackground: theme.bg\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClick={ handleChangeTheme(theme) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</li>\n\t\t\t\t}) }\n\t\t\t</ul>\n\t\t</div>\n\t)\n}\n\n\nexport default ThemeSwitcher;","import { useEffect, useRef, useState } from \"react\";\n\n\nexport default function useComponentVisible(initialIsVisible) {\n\tconst [isComponentVisible, setIsComponentVisible] = useState(initialIsVisible);\n\tconst ref = useRef(null);\n\t\n\tconst handleClickOutside = (event) => {\n\t\tif (ref.current && !ref.current.contains(event.target)) {\n\t\t\tsetIsComponentVisible(false);\n\t\t}\n\t};\n\t\n\tuseEffect(() => {\n\t\tdocument.addEventListener('click', handleClickOutside, true);\n\t\t\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('click', handleClickOutside, true);\n\t\t};\n\t}, []);\n\t\n\treturn { ref, isComponentVisible, setIsComponentVisible };\n}\n","import React from 'react';\n\nconst Search = (props) => {\n  const {\n    children,\n    onChangeValue = () => {},\n    onClearField = () => {},\n    onKeyCatcher = () => {},\n    onClickButton = () => {},\n    textValue,\n  } = props;\n  \n  \n  return (\n    <div className=\"search\">\n      <div className=\"search__wrap\">\n        <input\n          type=\"search\"\n          role=\"search\"\n          placeholder=\"Search for a location\"\n          className=\"search__input\"\n          onChange={ onChangeValue }\n          onBlur={ onClearField }\n          onKeyDown={ onKeyCatcher }\n          value={ textValue }\n        />\n        \n        <button\n          type=\"submit\"\n          className=\"search__button\"\n          onClick={ onClickButton }\n        >\n          <svg\n            width=\"24\"\n            height=\"24\"\n            fill=\"none\"\n            className=\"search__icon\"\n          >\n            <path\n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n              stroke=\"currentColor\"\n              strokeWidth=\"2\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        </button>\n        {\n          children\n        }\n      </div>\n    </div>\n  );\n};\n\n\nexport default Search;\n","import { Fragment, useEffect, useRef, useState } from 'react';\nimport fetcher from \"../libs/fetcher\";\nimport { messageError } from \"../libs/clientMessages/clientMessages\";\nimport Search from \"../components/search.component\";\n// import fakeLocationSuggestion from \"../utils/fakeLocationSuggestion.json\";\n\n\nconst API_KEY = process.env.REACT_APP_AUTOCOMPLETE_API_KEY || \"\";\nconst MAX_RESULT = 20;\n\nconst AutocompleteContainer = (props) => {\n\tconst { onLocationChange = (text) => {} } = props;\n\t\n\tconst isCancelled = useRef(false); // true - block update load data from autocomplete api\n\tconst [ textValue, setTextValue ] = useState(\"\"); // input data\n\tconst [ cities, setCities ] = useState([]); // saved full collection from autocomplete api\n\tconst [ suggestions, setSuggestions ] = useState([]); // saved only filtered data\n\t\n\t// the index of the drop-down list item to select using the up and down keys.\n\t// After pressing, the enter will return to position -1\n\tconst [ focusSuggestion, setFocusSuggestion ] = useState(-1);\n\t\n\t/*\n\t// for get fake data\n\tuseEffect(() => {\n\t\tisCancelled.current = true;\n\n\t\tsetTimeout(() => {\n\t\t\tsetSuggestions(fakeLocationSuggestion);\n\t\t}, 1000);\n\t}, [])\n\t*/\n\t\n\tuseEffect(() => {\n\t\tconst loadUsers = async () => {\n\t\t\ttry {\n\t\t\t\tconst URL = `https://autocomplete.geocoder.ls.hereapi.com/6.2/suggest.json?query=${ encodeURIComponent(textValue) }&maxresults=${ MAX_RESULT }&apikey=${ API_KEY }`;\n\t\t\t\t\n\t\t\t\tconst res = await fetcher(URL);\n\t\t\t\tconst suggestionsCollection = res.suggestions;\n\t\t\t\t\n\t\t\t\tconst suggestionsFilter = _cityFilter(suggestionsCollection);\n\t\t\t\t\n\t\t\t\tif (suggestionsFilter) {\n\t\t\t\t\tsetCities(suggestionsFilter);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} catch (err) {\n\t\t\t\tmessageError(\"Sorry, something wrong with input autocomplete\");\n\t\t\t\tisCancelled.current = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If an error occurs while receiving data from the server,\n\t\t// then we no longer make a request to the server\n\t\tif (!isCancelled.current) {\n\t\t\t_clearFocusSuggestion();\n\t\t\t_clearSuggestion(textValue);\n\t\t\t\n\t\t\tloadUsers();\n\t\t}\n\t\t\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [ textValue ]);\n\t\n\t\n\tconst _cityFilter = (suggestionArr) => {\n\t\tif (suggestionArr) {\n\t\t\treturn suggestionArr\n\t\t\t\t.filter(suggestObj => [ \"district\", \"city\" ].includes(suggestObj.matchLevel))\n\t\t}\n\t\t\n\t\treturn suggestionArr;\n\t}\n\t\n\tconst _clearFocusSuggestion = () => {\n\t\tif (focusSuggestion !== -1) {\n\t\t\tsetFocusSuggestion(-1);\n\t\t}\n\t}\n\t\n\tconst _clearSuggestion = (textValue) => {\n\t\tif (!textValue.length && suggestions.length) {\n\t\t\tsetSuggestions([]);\n\t\t}\n\t}\n\t\n\tconst _cityNameLayout = (suggestion) => {\n\t\tconst countyName = suggestion.address.county || \"\";\n\t\tconst cityName = suggestion.address.district || suggestion.address.city || \"\" ;\n\t\t\n\t\treturn `${ cityName }, ${ countyName }`;\n\t}\n\t\n\t\n\tconst handleChangeValue = (event) => {\n\t\tconst textValue = event.target.value;\n\t\t\n\t\tsetSuggestions(cities);\n\t\tsetTextValue(textValue);\n\t}\n\t\n\tconst handleSuggestClick = event => {\n\t\tconst textClick = event.target.innerText;\n\t\t\n\t\tsetTextValue(textClick);\n\t\tsetSuggestions([]);\n\t}\n\t\n\tconst handleClearField = () => {\n\t\tsetTimeout(() => {\n\t\t\tsetSuggestions([]);\n\t\t}, 200)\n\t}\n\t\n\tconst handleKeyCatcher = (event) => {\n\t\tif ((event.key === \"ArrowUp\" || event.code === \" ArrowUp\")\n\t\t\t&& (focusSuggestion > -1)) {\n\t\t\tsetFocusSuggestion(focusSuggestion - 1);\n\t\t}\n\t\t\n\t\tconst maxSuggest = suggestions.length - 1;\n\t\tif ((event.key === \"ArrowDown\" || event.code === \" ArrowDown\")\n\t\t\t&& (focusSuggestion !== maxSuggest)) {\n\t\t\tsetFocusSuggestion(focusSuggestion + 1);\n\t\t}\n\t\t\n\t\tif ((event.key === \"Enter\" || event.code === \" Enter\")\n\t\t\t&& (focusSuggestion !== -1)) {\n\t\t\tsetTextValue(_cityNameLayout(suggestions[ focusSuggestion ]));\n\t\t\thandleClearField();\n\t\t}\n\t}\n\t\n\tconst handleClickButton = () => {\n\t\tonLocationChange(textValue);\n\t\t\n\t\t_clearFocusSuggestion();\n\t\thandleClearField();\n\t\tsetTextValue(\"\");\n\t}\n\t\n\tconst _mapSuggestion = (suggestion, index) => {\n\t\treturn <li\n\t\t\tclassName={ \"search__autocomplete-item \" + ((focusSuggestion === index) ? \"search__autocomplete-item--color\" : \"\") }\n\t\t\tkey={ suggestion.locationId }\n\t\t>\n\t\t\t{ _cityNameLayout(suggestion) }\n\t\t</li>\n\t};\n\t\n\t\n\treturn (\n\t\t<Fragment>\n\t\t\t<Search\n\t\t\t\tonChangeValue={ handleChangeValue }\n\t\t\t\tonClearField={ handleClearField }\n\t\t\t\tonKeyCatcher={ handleKeyCatcher }\n\t\t\t\tonClickButton={ handleClickButton }\n\t\t\t\ttextValue={ textValue }\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tsuggestions.length\n\t\t\t\t\t\t? <ul\n\t\t\t\t\t\t\tclassName=\"search__autocomplete\"\n\t\t\t\t      onClick={ handleSuggestClick }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ suggestions.map(_mapSuggestion) }\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</Search>\n\t\t</Fragment>\n\t);\n};\n\n\n\nexport default AutocompleteContainer;\n","import React, { Fragment } from \"react\";\n\nimport { fetchDataWeather, fetchDataWeatherFake } from '../utils/fetchDataWeather';\nimport fetchDataLocation from \"../utils/fetchDataLocation\";\n\nimport Geo from \"../components/geo.component\";\nimport Temperature from \"../components/temperature.component\";\nimport Detail from \"../components/detail.component\";\nimport Diagram from \"../components/diagram.component\";\nimport ThemeSwitcher from \"../components/themeSwitcher.component\";\nimport AutocompleteContainer from \"./autocomplete.container\";\n\n\nclass AppContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      actualTemperature: '0',\n      maxTemperature: '0',\n      minTemperature: '0',\n      date: 'Fri, May 6',\n      cityName: 'City Name',\n      windSpeed: '0',\n      humidity: '0',\n      pressure: '0',\n      weatherDescription: 'clouds',\n      weatherIcon: 'wi wi-day-cloudy',\n      temperaturesForecast: [ -10, -5, 0, 5, 10 ],\n      temperaturesForecastLabels: [ \"09:00\", \"12:00\", \"15:00\", \"18:00\", \"21:00\" ],\n      loaded: false,\n      error: false,\n      theme: 'default'\n    };\n  }\n  \n  componentDidMount() {\n    this._getData();\n    // this._getFakeData();\n  }\n  \n  _getFakeData() {\n    setTimeout(() => {\n      this.setState({ ...fetchDataWeatherFake() });\n    }, 1000)\n  }\n  \n  _setDataWeather = async (dataWeather) => {\n    const weatherData = await fetchDataWeather(dataWeather);\n    \n    if (!weatherData.error) {\n      this.setState({ ...weatherData });\n    }\n  };\n  \n  // Fetch the data using the gps coordinates\n  _getData = async () => {\n    const getLocation = await fetchDataLocation();\n    this._setDataWeather(getLocation)\n  }\n  \n  \n  // Fetch the data using city name from input on page\n  handleLocationChange = async (inputText) => {\n    this._setDataWeather({ cityName: inputText })\n  };\n  \n  \n  render() {\n    const {\n      cityName, date,\n      actualTemperature, maxTemperature, minTemperature,\n      weatherDescription, weatherIcon, windSpeed, humidity, pressure,\n      temperaturesForecast, temperaturesForecastLabels,\n      loaded\n    } = this.state;\n    \n    return (\n      <Fragment>\n        <div className=\"main\">\n          <div className=\"panel\">\n            <AutocompleteContainer onLocationChange={ this.handleLocationChange }/>\n            <ThemeSwitcher />\n          </div>\n          \n          <Geo data={{ cityName, date }} />\n          \n          <Temperature data={{ actualTemperature, maxTemperature, minTemperature }} />\n          \n          <Detail data={{ weatherDescription, weatherIcon, windSpeed, humidity, pressure }}/>\n          \n          <Diagram data={{ temperaturesForecast, temperaturesForecastLabels, loaded }}/>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\n\nexport default AppContainer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'vercel-toast/dist/vercel-toast.css';\nimport './main.css';\nimport { ThemeProvider } from \"./hock-context/themeContext\";\nimport App from './containers/app.container';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}